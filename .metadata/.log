!SESSION 2020-09-15 14:17:37.474 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2020-09-15 14:17:40.491
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2020-09-15 14:19:05.302 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2020-09-15 14:19:32.475
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-01-22 11:22:45.576 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-22 11:24:23.557
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 4 0 2021-01-22 11:43:38.897
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3807)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-01-22 11:44:00.957 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-22 11:44:10.146
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-01-22 12:00:42.068
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-01-22 12:12:42.637 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-22 12:12:45.333
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.e4.ui.workbench 2 0 2021-01-22 12:12:56.313
!MESSAGE Removing part descriptor with the 'net.sf.eclipsecs.ui.stats.views.MarkerStatsView' id and the 'Checkstyle violations' description. Points to the invalid 'bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView' class.

!ENTRY org.eclipse.e4.ui.workbench 2 0 2021-01-22 12:12:57.046
!MESSAGE Removing part descriptor with the 'net.sf.eclipsecs.ui.stats.views.GraphStatsView' id and the 'Checkstyle violations chart' description. Points to the invalid 'bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView' class.
!SESSION 2021-01-22 12:14:43.363 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-22 12:14:46.025
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-01-22 23:24:45.569 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-22 23:24:50.974
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:25:35.069
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:25:35.076
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:25:35.077
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:32:00.711
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[-]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:32:00.714
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:32:00.714
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:32:02.256
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:32:02.257
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:32:02.257
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:32:04.329
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:32:04.330
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:32:04.330
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:33:57.873
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:33:57.874
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:33:57.875
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:33:59.917
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void 
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:33:59.918
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:33:59.918
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:08.483
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void recursiveFunction() {
        
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:08.483
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:08.484
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:10.513
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void recursiveFunction() {
        re
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:10.514
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:10.514
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:12.071
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void recursiveFunction() {
        recursiveFunction();
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:12.072
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:12.072
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:24.652
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void recursiveFunction(int n) {
        recursiveFunction();
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:24.652
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:24.653
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:32.703
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void fact(int n) {
        recursiveFunction();
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:32.703
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:32.704
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:34.235
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        recursiveFunction();
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:34.236
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:34.236
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:46.321
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        return n * fact
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:46.321
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:46.322
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:47.853
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        return n * factorial(n);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:47.853
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:47.854
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:49.885
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:49.886
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:49.886
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:51.926
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:51.926
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:51.927
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:54.462
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:54.462
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:54.463
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:55.492
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (condition) {
            
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:55.493
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:55.493
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:34:58.031
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 1)) {
            
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:34:58.031
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:34:58.032
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:35:02.077
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 1)) {
            return 
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:35:02.078
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:35:02.079
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:35:03.114
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 1)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:35:03.115
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:35:03.115
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:35:16.185
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds()
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:35:16.185
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:35:16.186
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:42:39.490
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds(Cor)
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:42:39.491
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:42:39.491
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:42:41.521
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds(Coordinate )
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:42:41.521
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:42:41.522
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:42:44.056
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || sourceCoord.getX() < 0 || sourceCoord.getY() < 0 || 
                sourceCoord.getX() >= mazeWidth || sourceCoord.getY() >= mazeHeight || goalCoord.getX() < 0 ||
                goalCoord.getY() < 0 || goalCoord.getX() >= mazeWidth || goalCoord.getY() >= mazeHeight || 
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || maze[goalCoord.getY()][goalCoord.getY()] == 1) {
            
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        maze[0][0]
        
        

    }
    
    private static boolean inBounds(Coordinate co)
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:42:44.057
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:42:44.057
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:50:27.821
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || !inBounds(sourceCoord, maze) || !inBounds(goalCoord, maze) ||
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || 
                maze[goalCoord.getY()][goalCoord.getX()] == 1)
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        
        
        

    }
    
    private static boolean inBounds(Coordinate coord, int[][] maze) {
        int coordX = coord.getX();
        int coordY = coord.getY();
        
        int mazeHeight = maze.length;
        int mazeLength = maze[0].length;
        
        
        
        return !(coordX < 0 || coordY < 0 || coordX >= mazeLength || coordY >= mazeHeight);
    }
    
    private static boolean blocked(Coordinate co)
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:50:27.824
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:50:27.824
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:50:30.349
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || !inBounds(sourceCoord, maze) || !inBounds(goalCoord, maze) ||
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || 
                maze[goalCoord.getY()][goalCoord.getX()] == 1)
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        
        
        

    }
    
    private static boolean inBounds(Coordinate coord, int[][] maze) {
        int coordX = coord.getX();
        int coordY = coord.getY();
        
        int mazeHeight = maze.length;
        int mazeLength = maze[0].length;
        
        
        
        return !(coordX < 0 || coordY < 0 || coordX >= mazeLength || coordY >= mazeHeight);
    }
    
    private static boolean blocked(Coordinate coord, int)
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:50:30.350
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:50:30.350
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-01-23 00:50:34.387
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
public class MazeSolverImpl {

    /**
     * You should write your code within this method. A good rule of thumb, especially with
     * recursive problems like this, is to write your input exception handling within this
     * method and then use helper methods to carry out the actual recursion.
     * <p>
     * How you set up the recursive methods is up to you, but note that since this is a *static*
     * method, all helper methods that it calls must *also* be static. Make them package-private
     * (i.e. without private or public modifiers) so you can test them individually.
     *
     * @param maze See the writeup for more details about the format of the input maze.
     * @param sourceCoord The source (starting) coordinate
     * @param goalCoord The goal (ending) coordinate
     * @return a matrix of the same dimension as the input maze containing the solution
     * path marked with 1's, or null if no path exists. See the writeup for more details.
     * @throws IllegalArgumentException in the following instances:
     * 1. If the maze is null
     * 2. If m * n <= 1 where m and n are the dimensions of the maze
     * 3. If either the source coordinate OR the goal coordinate are out of the matrix bounds.
     * 4. If your source or goal coordinate are on a blocked tile.
     */
    public static int[][] solveMaze(int[][] maze, Coordinate sourceCoord, Coordinate goalCoord) {
        
        if(maze == null) {
            throw new IllegalArgumentException();
        }
        int mazeHeight = maze.length;
        int mazeWidth = maze[0].length;
        if(mazeHeight * mazeWidth <= 1 || !inBounds(sourceCoord, maze) || !inBounds(goalCoord, maze) ||
                maze[sourceCoord.getY()][sourceCoord.getX()] == 1 || 
                maze[goalCoord.getY()][goalCoord.getX()] == 1)
            throw new IllegalArgumentException();
        }
        
        int[][] solutionPath = new int[mazeHeight][mazeWidth];
        
        if (findPathFrom(sourceCoord, goalCoord, maze, solutionPath)) {
            return solutionPath;
        } else {
            return null;            
        }
        
        
        

    }
    
    private static boolean inBounds(Coordinate coord, int[][] maze) {
        int coordX = coord.getX();
        int coordY = coord.getY();
        
        int mazeHeight = maze.length;
        int mazeLength = maze[0].length;
        
        
        
        return !(coordX < 0 || coordY < 0 || coordX >= mazeLength || coordY >= mazeHeight);
    }
    
    private static boolean blocked(Coordinate coord, int[][] maze) {
        
    
    
    private static boolean findPathFrom(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        if(sourceCoord.equals(goalCoard)) {
            return true;
        }
        
        //We store the result of the down functions in a local 2D array
        //This is still just taking up heap 
        boolean downResult = moveDown(sourceCoord, goalCoard, maze, path);
        if(downResult) {
            return true;
        }
        
        boolean upResult = moveUp(sourceCoord, goalCoard, maze, path);
        if(upResult) {
            return true;
        }
        
        boolean leftResult = moveLeft(sourceCoord, goalCoard, maze, path);
        if(leftResult) {
            return true;
        }
        
        
        
        boolean rightResult = moveRight(sourceCoord, goalCoard, maze, path);
        if(rightResult) {
            return true;
        }
        
        //If we have made it to this line of the function, then we know no solution exists
        //Must return false
        return false;
    }
    
    
    private static boolean moveDown(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY + 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveUp(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX, sourceY - 1);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean moveLeft(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX - 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    private static boolean  moveRight(Coordinate sourceCoord, Coordinate goalCoard, int[][] maze, int[][] path) {
        int sourceX = sourceCoord.getX();
        int sourceY = sourceCoord.getY();
        
        Coordinate newCoordinate = new Coordinate(sourceX + 1, sourceY);
        
        if(maze[newCoordinate.getY()][newCoordinate.getX()] == 1) {
            return false;
        } else {
            path[newCoordinate.getY()][newCoordinate.getX()] = 1;
            return findPathFrom(newCoordinate, goalCoard, maze, path);
        }
    }
    
    
    void factorial(int n) {
        if (n == 0)) {
            return 1;
        }
        return n * factorial(n-1);
    }
    
    
    
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-01-23 00:50:34.387
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-01-23 00:50:34.387
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:645)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:205)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2021-01-23 18:49:11.216 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-23 18:49:17.982
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-01-24 12:26:31.690 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2021-01-24 13:01:17.263
!MESSAGE Unknown Host: http://download.eclipse.org/eclipse/updates/4.13/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:793)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1495)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1354)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1288)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2021-01-24 13:01:17.268
!MESSAGE Unknown Host: http://download.eclipse.org/releases/2019-09/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:793)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1495)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1354)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1288)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2021-01-24 13:01:17.272
!MESSAGE Unknown Host: http://download.eclipse.org/usssdk/updates/release/latest/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:793)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1495)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1354)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1288)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2021-01-24 13:01:17.276
!MESSAGE Unknown Host: http://update.eclemma.org/content.xml
!STACK 0
java.net.UnknownHostException: update.eclemma.org
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:793)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1495)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1354)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1288)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2021-01-24 13:01:17.278
!MESSAGE Unknown Host: http://download.eclipse.org/mylyn/releases/latest/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:793)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1495)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1354)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1288)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1006 2021-01-24 13:01:17.282
!MESSAGE Unknown Host: http://download.eclipse.org/oomph/updates/milestone/latest/compositeContent.xml
!STACK 0
java.net.UnknownHostException: download.eclipse.org
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:793)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1495)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1354)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1288)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:246)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-01-24 14:51:06.630 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-24 14:59:53.291
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 4 0 2021-01-24 15:10:03.915
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-01-24 15:30:10.849
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-01-24 20:14:47.596 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-24 20:14:53.549
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 4 0 2021-01-24 23:12:02.470
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-01-27 16:10:04.475 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-27 16:10:10.045
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-01-31 22:23:47.424 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-01-31 22:23:52.709
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-02-06 13:01:32.273 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-02-06 13:01:38.483
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-02-07 13:49:28.770 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-02-07 13:50:29.825
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 4 0 2021-02-07 15:12:58.038
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-02-07 15:13:04.297
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.jdt.debug 4 125 2021-02-07 15:16:33.677
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:303)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:810)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1154)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:928)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:696)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:140)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2021-02-07 15:16:33.679
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:303)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:810)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1154)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:928)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:696)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:140)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2021-02-07 15:16:33.679
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:303)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:810)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1154)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:928)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:696)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:140)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2021-02-07 15:17:44.611
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:303)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:810)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1154)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:928)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:696)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:140)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-02-07 20:16:24.084 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-02-07 20:16:36.766
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 4 0 2021-02-07 20:41:32.927
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY net.sf.eclipsecs.core 4 0 2021-02-07 20:57:51.012
!MESSAGE Checkstyle-Plugin: Exception was thrown while processing /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java
!STACK 0
com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java
	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:295)
	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213)
	at net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:158)
	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)
	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:833)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:220)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:263)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:316)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:319)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:371)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:392)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: MismatchedTokenException occurred while parsing file /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java.
	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:98)
	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:181)
	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:81)
	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316)
	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286)
	... 16 more
Caused by: /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java:224:5: expecting EOF, found '}'
	at antlr.Parser.match(Parser.java:211)
	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:211)
	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:92)
	... 20 more

!ENTRY net.sf.eclipsecs.core 4 0 2021-02-08 00:41:10.566
!MESSAGE Checkstyle-Plugin: Exception was thrown while processing /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java
!STACK 0
com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java
	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:295)
	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213)
	at net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:158)
	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)
	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:833)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:220)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:263)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:316)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:319)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:371)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:392)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: MismatchedTokenException occurred while parsing file /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java.
	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:98)
	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:181)
	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:81)
	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316)
	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286)
	... 16 more
Caused by: /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/QuadTreeCompression/src/QuadTreeNodeImplTest.java:249:1: expecting EOF, found '}'
	at antlr.Parser.match(Parser.java:211)
	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:211)
	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:92)
	... 20 more
!SESSION 2021-03-09 12:53:35.695 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-03-09 12:53:41.864
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-03-09 13:41:01.871
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-03-09 18:07:41.155
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.HashMap;

/**
 * Implements construction, encoding, and decoding logic of the Huffman coding algorithm. Characters
 * not in the given seed or alphabet should not be compressible, and attempts to use those
 * characters should result in the throwing of an {@link IllegalArgumentException} if used in {@link
 * #compress(String)}.
 */
public class Huffman {
	
	private Node huffmanRoot;
	private Map<Character, Integer> alphabet;
	int inputLengths = 0;
	int outputLengths = 
	
	class Node {
		private Node left;
		private Node right;
		private Node parent;
		
		
		private Character binaryDirection;
		private Character value;

		Node(Character value) {
			this.value = value;
		}
		
		Node(Node left, Node right) {
			
			this.left = left;
			this.right = right;
			left.setParent(this);
			left.setBinaryDirection('0');
			right.setParent(this);
			right.setBinaryDirection('1');
		}
		
		Character getBinaryDirection() {
			return this.binaryDirection;
		}
		
		Node getLeft() {
			return this.left;
		}
		
		Node getRight() {
			return this.right;
		}
		
		Node getParent() {
			return this.parent;
		}
		
		void setBinaryDirection(Character c) {
			if(!(c.equals('1') || c.equals('0'))) { 
				throw new IllegalArgumentException();
			} else {
				this.binaryDirection = c;
			}
		}
		
		void setLeft(Node left) {
			this.left = left;
		}
		
		void setRight(Node right) {
			this.right = right;
		}
		
		void setParent(Node parent) {
			this.parent = parent;
		}
		
		Character getValue() {
			return this.value;
		}
		
		boolean isLeaf() {
			return this.value != null;
		}
	}

    /**
     * Constructs a {@code Huffman} instance from a seed string, from which to deduce the alphabet
     * and corresponding frequencies.
     * <p/>
     * Do NOT modify this constructor header.
     *
     * @param seed the String from which to build the encoding
     * @throws IllegalArgumentException seed is null, seed is empty, or resulting alphabet only has
     *                                  1 character
     */
    public Huffman(String seed) {
        if(seed == null || seed.length() == 0) {
        	throw new IllegalArgumentException();
        }
        
        Map<Character, Integer> alphabet = new HashMap<Character, Integer>();
        
        for(int i = 0; i < seed.length(); i++) {
        	Character current = seed.charAt(i);
        	if(alphabet.containsKey(current)) {
        		alphabet.replace(current, alphabet.get(current) + 1);
        	} else {
        		alphabet.put(current, 1);
        	}
        }
        this.alphabet = alphabet;
        createTree(alphabet);
    }

    /**
     * Constructs a {@code Huffman} instance from a frequency map of the input alphabet.
     * <p/>
     * Do NOT modify this constructor header.
     *
     * @param alphabet a frequency map for characters in the alphabet
     * @throws IllegalArgumentException if the alphabet is null, empty, has fewer than 2 characters,
     *                                  or has any non-positive frequencies
     */
    public Huffman(Map<Character, Integer> alphabet) {
        if(alphabet == null || alphabet.isEmpty() || alphabet.size() < 2) {
        	throw new IllegalArgumentException();
        }
        this.alphabet = alphabet;
        createTree(alphabet);
    }
    
    public void createTree(Map<Character, Integer> alphabet) {
    	BinaryMinHeap<Integer, Node> heap = new BinaryMinHeapImpl<Integer, Node>();
    	alphabet.forEach((character, freq) -> {
    		heap.add(freq, new Node(character));
    	});
    	
    	while(heap.size() > 1) {
    		int rightFrequency = (int) heap.peek().key;
    		Node rightNode = heap.extractMin().value;
    		
    		int leftFrequency = (int) heap.peek().key;
    		Node leftNode = heap.extractMin().value;
    		
    		
    		
    		Node connectNode = new Node(leftNode, rightNode);
    		
    		heap.add(leftFrequency + rightFrequency, connectNode);
    		
    		
    	}
    	
    	this.huffmanRoot = heap.extractMin().value;
    	
    	
    }

    /**
     * Compresses the input string.
     *
     * @param input the string to compress, can be the empty string
     * @return a string of ones and zeroes, representing the binary encoding of the inputted String.
     * @throws IllegalArgumentException if the input is null or if the input contains characters
     *                                  that are not compressible
     */
    public String compress(String input) {
    	if (input == null) {
    		throw new IllegalArgumentException(); 
    	}
        StringBuilder output = new StringBuilder();
        for(int i = 0; i < input.length(); i++) {
        	try {
        		encodingSearchFor(input.charAt(i), output, huffmanRoot);
        	} catch (NoSuchElementException e) {
        		throw new IllegalArgumentException();
        	}
        }
        inputLengths += input.length() * 16;
        return output.toString();
    }
    
    void encodingSearchFor(Character c, StringBuilder output, Node current) {
    	if(current.isLeaf()) {
    		if(!current.getValue().equals(c)) {
    		    throw new NoSuchElementException();
    		}
    	} else {
    	    try {
                output.append('1');
                encodingSearchFor(c, output, current.getRight());
            } catch(NoSuchElementException e) {
                try {
                    output.delete(output.length() - 1, output.length());
                    output.append('0');
                    encodingSearchFor(c, output, current.getLeft());
                } catch(NoSuchElementException x) {
                    output.delete(output.length() - 1, output.length());
                    throw new NoSuchElementException();
                }
            }
    	}
		
    	
    }

    /**
     * Decompresses the input string.
     *
     * @param input the String of binary digits to decompress, given that it was generated by a
     *              matching instance of the same compression strategy
     * @return the decoded version of the compressed input string
     * @throws IllegalArgumentException if the input is null, or if the input contains characters
     *                                  that are NOT 0 or 1, or input contains a sequence of bits
     *                                  that is not decodable
     */
    public String decompress(String input) {
        if(input == null ) {
        	throw new IllegalArgumentException();
        }
        StringBuilder output = new StringBuilder();
        Node currentNode = huffmanRoot;
        for(int i = 0; i < input.length(); i++) {
        	if(currentNode.isLeaf()) {
        		output.append(currentNode.getValue());
        		currentNode = huffmanRoot;
        	}
        	
        	if(input.charAt(i) == '0') {
        		currentNode = currentNode.getLeft();
        	} else if(input.charAt(i) == '1') {
        		currentNode = currentNode.getRight();
        	} else {
        		throw new IllegalArgumentException();
        	}
        }
        if (currentNode.getParent() != null) {
        	throw new IllegalArgumentException();
        } else {
            
        	return output.toString();
        }
    }

    /**
     * Computes the compression ratio so far. This is the length of all output strings from {@link
     * #compress(String)} divided by the length of all input strings to {@link #compress(String)}.
     * Assume that each char in the input string is a 16 bit int.
     *
     * @return the ratio of the total output length to the total input length in bits
     * @throws IllegalStateException if no calls have been made to {@link #compress(String)} before
     *                               calling this method
     */
    public double compressionRatio() {
        // TODO: implement
        throw new UnsupportedOperationException();
    }

    /**
     * Computes the expected encoding length of an arbitrary character in the alphabet based on the
     * objective function of the compression.
     * <p>
     * The expected encoding length is simply the sum of the length of the encoding of each
     * character multiplied by the probability that character occurs.
     *
     * @return the expected encoding length of an arbitrary character in the alphabet
     */
    public double expectedEncodingLength() {
        // TODO: implement
        throw new UnsupportedOperationException();
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-03-09 18:07:41.159
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-03-09 18:07:41.160
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.ui 4 0 2021-03-09 20:52:50.769
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-03-09 20:52:53.643
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-03-09 20:52:54.788
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-03-09 20:52:55.786
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.jdt.ui 4 10001 2021-03-09 20:54:16.455
!MESSAGE Internal Error
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1093)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.replace(SynchronizableDocument.java:176)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1123)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.replace(SynchronizableDocument.java:164)
	at org.eclipse.jdt.internal.ui.text.java.LazyGenericTypeProposal$2$1.perform(LazyGenericTypeProposal.java:791)
	at org.eclipse.jface.text.AbstractDocument.executePostNotificationChanges(AbstractDocument.java:1224)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:757)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:716)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:700)
	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:774)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1105)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.replace(SynchronizableDocument.java:176)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1123)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.replace(SynchronizableDocument.java:164)
	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange(DefaultDocumentAdapter.java:223)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7434)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:8311)
	at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2512)
	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:6075)
	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:6106)
	at org.eclipse.swt.custom.StyledText.lambda$1(StyledText.java:5795)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1549)
	at org.eclipse.swt.widgets.Control.insertText(Control.java:2128)
	at org.eclipse.swt.widgets.Canvas.insertText(Canvas.java:291)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6245)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:71)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:604)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6080)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:235)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2158)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2401)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6200)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5426)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5586)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:131)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3807)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-03-31 20:51:26.247 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-03-31 20:51:35.656
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-03-31 21:34:22.667
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 4 0 2021-03-31 21:45:09.275
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-04-07 17:20:40.947 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-07 17:20:46.954
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-07 17:28:03.480
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 4 0 2021-04-07 17:29:58.597
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-04-08 16:22:40.878 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-08 16:22:52.598
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-08 17:18:35.234
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-04-18 14:22:10.521 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-18 14:22:19.962
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2021-04-18 14:27:13.272 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-18 14:27:18.406
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-18 14:35:21.085
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.help.base 2 0 2021-04-18 16:29:15.217
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.wst.dtdeditor.doc.user_1.1.0.v201903222120 [430]'. The index should be rebuilt with Lucene 8.0.0

!ENTRY org.eclipse.help.base 2 0 2021-04-18 16:29:15.245
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.wst.xmleditor.doc.user_1.1.0.v201903222120 [443]'. The index should be rebuilt with Lucene 8.0.0

!ENTRY org.eclipse.help.base 2 0 2021-04-18 16:29:15.246
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.wst.xsdeditor.doc.user_1.0.800.v201903222120 [446]'. The index should be rebuilt with Lucene 8.0.0

!ENTRY org.eclipse.help.base 2 0 2021-04-18 16:29:15.247
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.wst.sse.doc.user_1.2.0.v201903222120 [433]'. The index should be rebuilt with Lucene 8.0.0

!ENTRY org.eclipse.ui 4 0 2021-04-18 16:29:15.660
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.internal.quickaccess.QuickAccessContents.entryEnabled(QuickAccessContents.java:608)
	at org.eclipse.ui.internal.quickaccess.QuickAccessContents.computeMatchingEntries(QuickAccessContents.java:526)
	at org.eclipse.ui.internal.quickaccess.QuickAccessContents.refresh(QuickAccessContents.java:162)
	at org.eclipse.ui.internal.quickaccess.SearchField$7.refresh(SearchField.java:328)
	at org.eclipse.ui.internal.quickaccess.QuickAccessContents.lambda$1(QuickAccessContents.java:713)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:183)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1516)
	at org.eclipse.swt.widgets.Text.setText(Text.java:2258)
	at org.eclipse.ui.internal.quickaccess.SearchField$7.doClose(SearchField.java:278)
	at org.eclipse.ui.internal.quickaccess.SearchField.checkFocusLost(SearchField.java:573)
	at org.eclipse.ui.internal.quickaccess.SearchField$4.lambda$0(SearchField.java:202)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4145)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3812)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-04-19 14:50:22.002
!MESSAGE 
!STACK 0
org.eclipse.e4.core.di.InjectionException: java.lang.NullPointerException
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:998)
	at org.eclipse.e4.core.internal.di.InjectorImpl.uninject(InjectorImpl.java:200)
	at org.eclipse.e4.core.internal.di.Requestor.uninject(Requestor.java:176)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.update(ContextObjectSupplier.java:89)
	at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:105)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.removeListenersTo(EclipseContext.java:491)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.uninject(ContextInjectionFactory.java:184)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:954)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:900)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:925)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:2110)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:1741)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$3(WorkbenchWindow.java:1766)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:72)
	at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:1766)
	at org.eclipse.ui.internal.Workbench$10.run(Workbench.java:1125)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1108)
	at org.eclipse.ui.internal.Workbench.lambda$4(Workbench.java:1409)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:72)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1409)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1385)
	at org.eclipse.ui.internal.Workbench.lambda$17(Workbench.java:2788)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4395)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5597)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5284)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5716)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:97)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3804)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
Caused by: java.lang.NullPointerException
	at org.eclipse.ui.internal.quickaccess.SearchField.storeDialog(SearchField.java:747)
	at org.eclipse.ui.internal.quickaccess.SearchField.dispose(SearchField.java:729)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 66 more
!SESSION 2021-04-19 15:17:04.042 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-19 15:17:10.231
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-19 16:13:39.965
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 4 0 2021-04-20 15:16:25.641
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-04-20 15:16:28.113
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-04-20 16:15:43.647 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-20 16:15:52.444
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-20 16:49:11.797
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 4 0 2021-04-20 17:04:43.387
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)

!ENTRY org.eclipse.ui 4 0 2021-04-20 17:21:42.898
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-04-20 17:52:09.133 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-20 17:52:16.162
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-20 20:29:19.457
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY net.sf.eclipsecs.core 4 0 2021-04-20 21:34:14.206
!MESSAGE Checkstyle-Plugin: Exception was thrown while processing /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/Hashing/src/TrieMap.java
!STACK 0
com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/Hashing/src/TrieMap.java
	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:295)
	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213)
	at net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:158)
	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)
	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:833)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:220)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:263)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:316)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:319)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:371)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:392)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: MismatchedTokenException occurred while parsing file /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/Hashing/src/TrieMap.java.
	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:98)
	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:181)
	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:81)
	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316)
	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286)
	... 16 more
Caused by: /Users/nathanbaker/Desktop/CIS 121 Ecclipse Workspace/Hashing/src/TrieMap.java:174:9: expecting EOF, found 'char'
	at antlr.Parser.match(Parser.java:211)
	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:211)
	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:92)
	... 20 more

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-04-20 22:10:58.196
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7196)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3472)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3445)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1495)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1483)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:152)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4145)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3812)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-04-20 22:32:09.249 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-20 22:32:18.417
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-20 22:50:21.782
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 4 0 2021-04-21 01:04:07.949
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tracker.drawRectangles(Tracker.java:361)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:806)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.startDrag(DnDManager.java:230)
	at org.eclipse.e4.ui.workbench.addons.dndaddon.DnDManager.lambda$0(DnDManager.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:131)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4406)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1512)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1535)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1324)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4193)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3810)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:633)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1468)
!SESSION 2021-04-22 18:51:28.206 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=10.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/nathanbaker/.eclipse_keyring

!ENTRY org.eclipse.core.net 1 0 2021-04-22 18:51:34.304
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2021-04-22 19:17:57.338
!MESSAGE Unable to read repository at jar:file:/Users/nathanbaker/Downloads/stylechecker.zip!/content.xml.
!STACK 0
java.nio.file.NoSuchFileException: /Users/nathanbaker/Downloads/stylechecker.zip
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:145)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1755)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:825)
	at java.base/java.util.zip.ZipFile$CleanableResource$FinalizableResource.<init>(ZipFile.java:852)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:841)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:245)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:175)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:341)
	at java.base/sun.net.www.protocol.jar.URLJarFile.<init>(URLJarFile.java:103)
	at java.base/sun.net.www.protocol.jar.URLJarFile.getJarFile(URLJarFile.java:72)
	at java.base/sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:99)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:125)
	at java.base/sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:155)
	at org.eclipse.ecf.provider.filetransfer.browse.URLFileSystemBrowser.runRequest(URLFileSystemBrowser.java:118)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
